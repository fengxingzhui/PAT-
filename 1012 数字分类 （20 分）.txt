1012 数字分类 （20 分）
给定一系列正整数，请按要求对数字进行分类，并输出以下 5 个数字：
A1= 能被 5 整除的数字中所有偶数的和；
A2= 将被 5 除后余 1 的数字按给出顺序进行交错求和，即计算 n1−n2+n3−n4⋯；
A3= 被 5 除后余 2 的数字的个数；
A4= 被 5 除后余 3 的数字的平均数，精确到小数点后 1 位；
A5= 被 5 除后余 4 的数字中最大数字。
输入格式：
每个输入包含 1 个测试用例。每个测试用例先给出一个不超过 1000 的正整数 N，随后给出 N 个不超过 1000 的待分类的正整数。数字间以空格分隔。

输出格式：
对给定的 N 个正整数，按题目要求计算 A1~A5并在一行中顺序输出。数字间以空格分隔，但行末不得有多余空格。

若其中某一类数字不存在，则在相应位置输出 N。

输入样例 1：
13 1 2 3 4 5 6 7 8 9 10 20 16 18
输出样例 1：
30 11 2 9.7 9
输入样例 2：
8 1 2 4 5 6 7 9 16
输出样例 2：
N 11 2 N 9

#include<cstdio>
using namespace std;
int main()
{
	int N;
	scanf("%d",&N);
	int A1=0,A2=0,A3=0,A5=0;
	double A4=0.0;
	int flag=1,count_4=0,count_2=0;
	for(int i=0;i<N;i++)
	{
		int temp;
		scanf("%d",&temp);
		switch(temp%5)
		{
			case 0:if(temp%2==0) A1+=temp;
				   break;
			case 1:A2+=flag*temp;
				   flag=-flag;
				   count_2++;
				   break;
			case 2:A3++;
			       break;
			case 3:count_4++;
				   A4+=temp;
				   break;
			case 4:if(temp>A5) A5=temp;
			       break;
		}
	}
	if(A1) printf("%d",A1);
	else printf("N");
	if(count_2) printf(" %d",A2);
	else printf(" N");
	if(A3) printf(" %d",A3);
	else printf(" N");
	if(count_4) printf(" %.1f",A4/count_4);
	else printf(" N");
	if(A5) printf(" %d",A5);
	else printf(" N");
}