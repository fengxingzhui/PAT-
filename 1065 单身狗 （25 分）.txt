1065 单身狗 （25 分）
“单身狗”是中文对于单身人士的一种爱称。本题请你从上万人的大型派对中找出落单的客人，以便给予特殊关爱。

输入格式：
输入第一行给出一个正整数 N（≤ 50 000），是已知夫妻/伴侣的对数；随后 N 行，每行给出一对夫妻/伴侣——为方便起见，每人对应一个 ID 号，为 5 位数字（从 00000 到 99999），ID 间以空格分隔；之后给出一个正整数 M（≤ 10 000），为参加派对的总人数；随后一行给出这 M 位客人的 ID，以空格分隔。题目保证无人重婚或脚踩两条船。

输出格式：
首先第一行输出落单客人的总人数；随后第二行按 ID 递增顺序列出落单的客人。ID 间用 1 个空格分隔，行的首尾不得有多余空格。

输入样例：
3
11111 22222
33333 44444
55555 66666
7
55555 44444 10000 88888 22222 11111 23333
输出样例：
5
10000 23333 44444 55555 88888

注意点：1.前导0
        2.大于10^6的数组要放在函数外面定义
		3.注意00000号也可能是某人的couple，所以用memset把couple数组初始化为-1

#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
using namespace std;
int couple[1000000]={},list[1000000]={};
int main()
{
	memset(couple,-1,sizeof(couple));
	int N,M;
	scanf("%d",&N);
	for(int i=0;i<N;i++)
	{
		int a,b;
		scanf("%d %d",&a,&b);
		couple[a]=b;
		couple[b]=a;
	}
	scanf("%d",&M);
	int search[M]={};
	for(int i=0;i<M;i++)
	{
		int a;
		scanf("%d",&a);
		search[i]=a;
		list[a]=1;
	}
	int cnt=0;
	vector<int>single;
	for(int i=0;i<M;i++)
	{
		if(couple[search[i]]==-1)
		{
			single.push_back(search[i]);
			cnt++;
		}
		else if(!list[couple[search[i]]])
		{
			single.push_back(search[i]);
			cnt++;
		}
	}
	sort(single.begin(),single.end());
	printf("%d\n",cnt);
	for(int i=0;i<single.size();i++) 
	{
		if(i) printf(" ");
		printf("%05d",single[i]);
	}
}		