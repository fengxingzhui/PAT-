1029 旧键盘 （20 分）
旧键盘上坏了几个键，于是在敲一段文字的时候，对应的字符就不会出现。现在给出应该输入的一段文字、以及实际被输入的文字，请你列出肯定坏掉的那些键。

输入格式：
输入在 2 行中分别给出应该输入的文字、以及实际被输入的文字。每段文字是不超过 80 个字符的串，由字母 A-Z（包括大、小写）、数字 0-9、以及下划线 _（代表空格）组成。题目保证 2 个字符串均非空。

输出格式：
按照发现顺序，在一行中输出坏掉的键。其中英文字母只输出大写，每个坏键只输出一次。题目保证至少有 1 个坏键。

输入样例：
7_This_is_a_test
_hs_s_a_es
输出样例：
7TI

#include<cstdio>
#include<cstring>
using namespace std;
int main()
{
	char a[81]={},c[81]={};
	scanf("%s %s",&a,&c);
	int hashTable[37]={};
	for(int i=0,j=0;i<strlen(a);i++)
	{
		if(a[i]!=c[j])
		{
			if(a[i]>='0'&&a[i]<='9'&&!hashTable[a[i]-'0']) 
			{
				printf("%c",a[i]);
				hashTable[a[i]-'0']++;
			}
			else if(a[i]>='a'&&a[i]<='z'&&!hashTable[a[i]-'a'+10])
			{
				printf("%c",a[i]-'a'+'A');
				hashTable[a[i]-'a'+10]++;
			}
			else if(a[i]>='A'&&a[i]<='Z'&&!hashTable[a[i]-'A'+10])
			{
				printf("%c",a[i]);
				hashTable[a[i]-'A'+10]++;
			}
			else if(a[i]=='_'&&!hashTable[36])
			{
				printf("%c",a[i]);
				hashTable[36]++;
			}
		}
		else j++;
	}
}