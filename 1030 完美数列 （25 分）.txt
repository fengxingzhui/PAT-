1030 完美数列 （25 分）
给定一个正整数数列，和正整数 p，设这个数列中的最大值是 M，最小值是 m，如果 M≤mp，则称这个数列是完美数列。

现在给定参数 p 和一些正整数，请你从中选择尽可能多的数构成一个完美数列。

输入格式：
输入第一行给出两个正整数 N 和 p，其中 N（≤10^5）是输入的正整数的个数，p（≤10^9）是给定的参数。第二行给出 N 个正整数，每个数不超过 10^9。

输出格式：
在一行中输出最多可以选择多少个数可以用它们组成一个完美数列。

输入样例：
10 8
2 3 20 4 5 1 6 7 8 9
输出样例：
8

注意：google的题不是一般的坑，不过想出来就不难
	  坑点1：O(n^2)的思路肯定超时
	  坑点2：相乘以后超过了int范围
	  坑点3：可能这个数组只有一个数
	  
#include<cstdio>
#include<algorithm>
using namespace std;

int main()
{
	int N,p;
	scanf("%d %d",&N,&p);
	long long int a[N]={};
	for(int i=0;i<N;i++) scanf("%lld",&a[i]);
	sort(a,a+N);
	int max=0;
	for(int i=0,j=0;j<N;)
	{
		long long int m=a[i]*p;
		if(m>=a[j]) 
		{	
			if(j-i+1>max) max=j-i+1;
			j++;
		}
		else i++;
	}
	
	printf("%d",max);
}